package main

// https://github.com/jenkinsci/pipeline-stage-view-plugin/blob/master/rest-api/README.md

import (
	//	"fmt"
	"log"
	"os"
	//	"strings"

	"github.com/freme/jenkins/pkg/blue/api"
	"github.com/urfave/cli"
)

func main() {
	var jenkins string
	var build string
	var pipeline string

	app := cli.NewApp()
	app.Name = "jobresult"
	app.Usage = "parser using the blue ocean rest api"
	app.Action = func(c *cli.Context) error {
		api.GetLogs(jenkins, build, pipeline)
		return nil
	}

	app.Flags = []cli.Flag{
		cli.StringFlag{
			Name:        "url, u",
			Value:       "https://jenkins3.getgotools.net/jenkins",
			Usage:       "Jenkins Service URL",
			EnvVar:      "JENKINS_URL",
			Destination: &jenkins,
		},
		cli.StringFlag{
			Name:        "build, b",
			Value:       "0",
			Usage:       "Build Number, 0 defaults to latest finished build",
			EnvVar:      "BUILD_NUMBER",
			Destination: &build,
		},
		cli.StringFlag{
			Name: "pipeline, p",
			//job/autogenerated/job/rtc-platform/job/rtc-platform/job/develop/
			Value:       "/pipelines/autogenerated/pipelines/rtc-platform/pipelines/rtc-platform/branches/develop",
			Usage:       "Pipeline Path",
			EnvVar:      "PIPELINE_PATH",
			Destination: &pipeline,
		},
	}

	err := app.Run(os.Args)
	if err != nil {
		log.Fatal(err)
	}
}

// vim: ts=2 sw=2 et
